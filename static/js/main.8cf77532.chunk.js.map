{"version":3,"sources":["models/todo.ts","context/todo-context.tsx","components/NewTodo/NewTodo.tsx","components/Todos/TodoItem.tsx","components/Todos/TodoList.tsx","App.tsx","index.tsx"],"names":["Todo","title","description","estimatedTime","id","status","this","Date","toISOString","TodosContext","createContext","todos","formIsVisible","showForm","closeForm","addTodo","newTodo","removeTodo","toggleTodo","TodosProvider","props","useState","setTodos","setFormIsVisible","useEffect","localStorageTodos","JSON","parse","localStorage","getItem","setTodoInLocalStorage","todo","setItem","stringify","initialState","prevTodos","concat","filter","find","todoIndex","findIndex","Provider","value","children","useStyles","makeStyles","form","padding","marginTop","borderRadius","boxShadow","boxSizing","backgroundColor","display","flexDirection","alignItems","width","textAlign","fontWeight","fontSize","color","textField","minWidth","maxWidth","margin","isValid","error","titleReducer","state","action","type","trim","descriptionReducer","range","length","estimatedTimeReducer","NewTodo","useContext","useReducer","titleState","dispatchTitle","descriptionState","dispatchDescription","estimatedTimeState","dispatchEstimatedTime","classes","clearFormHandler","onSubmit","event","preventDefault","className","Fragment","TextField","variant","label","onChange","target","onBlur","helperText","multiline","rows","Box","sx","flexWrap","height","justifyContent","Button","onClick","size","todoItem","listStyle","position","top","right","border","paddin","cursor","transition","bottom","fontStyle","todoCompleted","textDecoration","TodoItem","bind","todoList","TodoList","map","item","index","container","minHeight","button","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cf77532.chunk.js","sourcesContent":["class Todo {\r\n  id: string;\r\n  title: string | undefined;\r\n  description: string | undefined;\r\n  estimatedTime: string | undefined;\r\n  status: boolean;\r\n\r\n  constructor(\r\n    title: string | undefined,\r\n    description: string | undefined,\r\n    estimatedTime: string | undefined\r\n  ) {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.estimatedTime = estimatedTime;\r\n    this.id = new Date().toISOString();\r\n    this.status = false;\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport Todo from \"../models/todo\";\r\n\r\ntype TodoContextObject = {\r\n  todos: Todo[];\r\n  formIsVisible: boolean;\r\n  showForm: () => void;\r\n  closeForm: () => void;\r\n  addTodo: (newTodo: Todo) => void;\r\n  removeTodo: (id: string) => void;\r\n  toggleTodo: (id: string, status: boolean) => void;\r\n};\r\n\r\nconst TodosContext = createContext<TodoContextObject>({\r\n  todos: [],\r\n  formIsVisible: false,\r\n  showForm: () => {},\r\n  closeForm: () => {},\r\n  addTodo: (newTodo: Todo) => {},\r\n  removeTodo: (id: string) => {},\r\n  toggleTodo: (id: string, status: boolean) => {},\r\n});\r\n\r\nexport const TodosProvider: React.FC = (props) => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [formIsVisible, setFormIsVisible] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const localStorageTodos = JSON.parse(\r\n      localStorage.getItem(\"todoList\") || \"{}\"\r\n    );\r\n    setTodos(localStorageTodos);\r\n  }, []);\r\n\r\n  const addTodoHandler = (newTodo: Todo) => {\r\n    setTodos((prevTodos) => {\r\n      setTodoInLocalStorage(prevTodos.concat(newTodo));\r\n      return prevTodos.concat(newTodo);\r\n    });\r\n  };\r\n\r\n  const removeTodoHandler = (id: string) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.filter((todo) => todo.id !== id);\r\n    });\r\n    setTodoInLocalStorage(todos);\r\n  };\r\n\r\n  const toggleTodoHandler = (id: string, status: boolean) => {\r\n    setTodos((prevTodos) => {\r\n      const todo = prevTodos.find((todo) => todo.id === id);\r\n      const todoIndex: number = prevTodos.findIndex((todo) => todo.id === id);\r\n\r\n      const newTodo = new Todo(\r\n        todo?.title,\r\n        todo?.description,\r\n        todo?.estimatedTime\r\n      );\r\n\r\n      newTodo.status = !status;\r\n      newTodo.id = id;\r\n\r\n      prevTodos[todoIndex] = newTodo;\r\n      setTodoInLocalStorage(prevTodos);\r\n      return [...prevTodos];\r\n    });\r\n  };\r\n\r\n  // console.log(todos);\r\n\r\n  const showFormHandler = () => {\r\n    setFormIsVisible(true);\r\n  };\r\n\r\n  const closeFormHandler = () => {\r\n    setFormIsVisible(false);\r\n  };\r\n\r\n  const setTodoInLocalStorage = (todo: Todo[]) => {\r\n    localStorage.setItem(\"todoList\", JSON.stringify(todo));\r\n  };\r\n\r\n  const initialState: TodoContextObject = {\r\n    todos: todos,\r\n    formIsVisible,\r\n    showForm: showFormHandler,\r\n    closeForm: closeFormHandler,\r\n    addTodo: addTodoHandler,\r\n    removeTodo: removeTodoHandler,\r\n    toggleTodo: toggleTodoHandler,\r\n  };\r\n\r\n  return (\r\n    <TodosContext.Provider value={initialState}>\r\n      {props.children}\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodosContext;\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Todo from \"../../models/todo\";\r\nimport TodosContext from \"../../context/todo-context\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\ninterface InputState {\r\n  value: string;\r\n  isValid: boolean | null;\r\n  error: string;\r\n}\r\n\r\ninterface InputAction {\r\n  value: string;\r\n  type: \"INPUT_CHANGE\" | \"INPUT_BLUR\" | \"FORM_SUBMIT\" | \"INPUT_CLEAR\";\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    padding: \"2rem\",\r\n    marginTop: \"2rem\",\r\n    borderRadius: \"6px\",\r\n    boxShadow: \"0 0 8px 1px RGBA(0,0,0,0.5)\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: \"#f3f3f3\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    textAlign: \"center\",\r\n\r\n    \"& h1\": {\r\n      marginTop: 0,\r\n      fontWeight: 300,\r\n      fontSize: \"3rem\",\r\n      color: \"#212121\",\r\n    },\r\n\r\n    \"@media (max-width: 800px)\": {\r\n      width: \"80%\",\r\n      padding: '1rem',\r\n\r\n      \"& h1\": {\r\n        marginTop: 0,\r\n        fontWeight: 300,\r\n        fontSize: \"2rem\",\r\n        color: \"#212121\",\r\n      },\r\n    },\r\n  },\r\n\r\n  textField: {\r\n    minWidth: \"10rem\",\r\n    maxWidth: \"30rem\",\r\n    width: \"80%\",\r\n    margin: \"1rem 0 1rem 0\",\r\n\r\n    \"@media (max-width: 800px)\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n});\r\n\r\nconst initialState: InputState = {\r\n  value: \"\",\r\n  isValid: null,\r\n  error: \"\",\r\n};\r\n\r\nconst titleReducer = (state: InputState, action: InputAction) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      if (!action.value) {\r\n        return {\r\n          value: action.value,\r\n          isValid: false,\r\n          error: \"O campo é obrigatório!\",\r\n        };\r\n      }\r\n      return { value: action.value, isValid: true, error: \"\" };\r\n    case \"INPUT_BLUR\":\r\n      if (action.value.trim() === \"\") {\r\n        return {\r\n          value: action.value,\r\n          isValid: false,\r\n          error: \"O campo é obrigatório.\",\r\n        };\r\n      }\r\n      return state;\r\n    case \"INPUT_CLEAR\":\r\n      return { value: action.value, isValid: null, error: \"\" };\r\n    case \"FORM_SUBMIT\":\r\n      if (state.value.trim() === \"\") {\r\n        return {\r\n          value: state.value,\r\n          isValid: false,\r\n          error: \"O campo é obrigatório.\",\r\n        };\r\n      }\r\n      return { value: state.value, isValid: true, error: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst descriptionReducer = (state: InputState, action: InputAction) => {\r\n  const range = 350;\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      if (action.value.length > range) {\r\n        return {\r\n          value: action.value,\r\n          isValid: false,\r\n          error: `O campo pode conter apenas ${range} caracteres.`,\r\n        };\r\n      }\r\n      return { value: action.value, isValid: true, error: \"\" };\r\n    case \"FORM_SUBMIT\":\r\n      if (state.value.length > range) {\r\n        return {\r\n          value: state.value,\r\n          isValid: false,\r\n          error: `O campo pode conter apenas ${range} caracteres.`,\r\n        };\r\n      }\r\n      return { value: state.value, isValid: true, error: \"\" };\r\n    case \"INPUT_CLEAR\":\r\n      return { value: action.value, isValid: null, error: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst estimatedTimeReducer = (state: InputState, action: InputAction) => {\r\n  switch (action.type) {\r\n    case \"INPUT_BLUR\":\r\n      return { value: action.value, isValid: true, error: \"\" };\r\n    case \"INPUT_CHANGE\":\r\n      return { value: action.value, isValid: true, error: \"Exemplo: 2 Horas\" };\r\n    case \"INPUT_CLEAR\":\r\n      return { value: action.value, isValid: null, error: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst NewTodo: React.FC = () => {\r\n  const { addTodo, formIsVisible, showForm, closeForm } =\r\n    useContext(TodosContext);\r\n  const [titleState, dispatchTitle] = useReducer(titleReducer, initialState);\r\n  const [descriptionState, dispatchDescription] = useReducer(\r\n    descriptionReducer,\r\n    initialState\r\n  );\r\n  const [estimatedTimeState, dispatchEstimatedTime] = useReducer(\r\n    estimatedTimeReducer,\r\n    initialState\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const changeTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatchTitle({ type: \"INPUT_CHANGE\", value: event.target.value });\r\n  };\r\n\r\n  const changeDescriptionHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatchDescription({ type: \"INPUT_CHANGE\", value: event.target.value });\r\n  };\r\n\r\n  const changeEstimatedTimeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatchEstimatedTime({ type: \"INPUT_CHANGE\", value: event.target.value });\r\n  };\r\n\r\n  const validateTitleHandler = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    dispatchTitle({ type: \"INPUT_BLUR\", value: event.target.value });\r\n  };\r\n\r\n  const blurEstimatedTimeHandler = (\r\n    event: React.FocusEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatchEstimatedTime({ type: \"INPUT_BLUR\", value: event.target.value });\r\n  };\r\n\r\n  const submitFormHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const newTodo = new Todo(\r\n      titleState.value,\r\n      descriptionState.value,\r\n      estimatedTimeState.value\r\n    );\r\n\r\n    if (!titleState.value) {\r\n      dispatchTitle({ type: \"FORM_SUBMIT\", value: \"\" });\r\n      return;\r\n    }\r\n\r\n    if (descriptionState.value.length > 350) {\r\n      dispatchDescription({ type: \"FORM_SUBMIT\", value: \"\" });\r\n      return;\r\n    }\r\n\r\n    addTodo(newTodo);\r\n    clearFormHandler();\r\n  };\r\n\r\n  const clearFormHandler = () => {\r\n    dispatchTitle({ type: \"INPUT_CLEAR\", value: \"\" });\r\n    dispatchDescription({ type: \"INPUT_CLEAR\", value: \"\" });\r\n    dispatchEstimatedTime({ type: \"INPUT_CLEAR\", value: \"\" });\r\n    closeForm();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitFormHandler} className={classes.form}>\r\n      <h1>Lista de Tarefas</h1>\r\n      {formIsVisible ? (\r\n        <React.Fragment>\r\n          <TextField\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            error={titleState.isValid === false}\r\n            id=\"task-title\"\r\n            label=\"Título\"\r\n            value={titleState.value}\r\n            onChange={changeTitleHandler}\r\n            onBlur={validateTitleHandler}\r\n            helperText={titleState.error}\r\n          />\r\n          <TextField\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            error={descriptionState.isValid === false}\r\n            id=\"task-title\"\r\n            label=\"Descrição\"\r\n            multiline\r\n            rows={4}\r\n            value={descriptionState.value}\r\n            onChange={changeDescriptionHandler}\r\n            helperText={descriptionState.error}\r\n          />\r\n          <TextField\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            id=\"task-estimated-time\"\r\n            label=\"Tempo Estimado\"\r\n            value={estimatedTimeState.value}\r\n            onChange={changeEstimatedTimeHandler}\r\n            onBlur={blurEstimatedTimeHandler}\r\n            helperText=\"Exemplo: 2 Horas\"\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              minWidth: \"100%\",\r\n              flexWrap: \"wrap\",\r\n              display: \"flex\",\r\n              height: \"6rem\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Criar Tarefa\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              onClick={clearFormHandler}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Button\r\n          onClick={showForm}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n        >\r\n          Nova Tarefa\r\n        </Button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport Todo from \"../../models/todo\";\r\nimport TodosContext from \"../../context/todo-context\";\r\n\r\nconst useStyles = makeStyles({\r\n  todoItem: {\r\n    boxShadow: \"0 3px 10px 1px #cecece\",\r\n    borderRadius: \"4px\",\r\n    listStyle: \"none\",\r\n    padding: \"1rem\",\r\n    width: \"20rem\",\r\n    margin: \"1rem\",\r\n    position: \"relative\",\r\n\r\n    \"@media (max-width: 800px)\": {\r\n      width: \"100%\",\r\n    },\r\n\r\n    \"& button\": {\r\n      position: \"absolute\",\r\n      top: \"1rem\",\r\n      right: \"1rem\",\r\n      backgroundColor: \"#cc0000\",\r\n      height: \"1.5rem\",\r\n      width: \"1.5rem\",\r\n      boxSizing: \"border-box\",\r\n      border: \"none\",\r\n      fontSize: \"1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      color: \"white\",\r\n      paddin: \"1rem\",\r\n      borderRadius: \"2px\",\r\n      cursor: \"pointer\",\r\n      transition: \"0.3s\",\r\n\r\n      \"&:hover\": {\r\n        backgroundColor: \"#af0000\",\r\n      },\r\n    },\r\n\r\n    \"& h4\": {\r\n      fontSize: \"1.3rem\",\r\n      color: \"#212121\",\r\n      marginTop: \"0\",\r\n    },\r\n\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: \"1rem\",\r\n      bottom: \"1rem\",\r\n      fontSize: \"1rem\",\r\n      color: \"#666\",\r\n      marginTop: \"0\",\r\n      fontStyle: \"italic\",\r\n    },\r\n  },\r\n  todoCompleted: {\r\n    backgroundColor: \"#AAD6A0\",\r\n\r\n    \"& h4, & p, & span\": {\r\n      textDecoration: \"line-through\",\r\n    },\r\n\r\n    \"& span\": {\r\n      color: \"#aaa\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TodoItem: React.FC<{ todo: Todo }> = (props) => {\r\n  const { title, description, estimatedTime, id, status } = props.todo;\r\n  const { removeTodo, toggleTodo } = useContext(TodosContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      className={`${classes.todoItem} ${\r\n        status === true ? classes.todoCompleted : \"\"\r\n      }`}\r\n      onClick={toggleTodo.bind(null, id, status)}\r\n    >\r\n      <button onClick={removeTodo.bind(null, id)}>✖</button>\r\n      <h4>{title}</h4>\r\n      <p>{description}</p>\r\n      <span>{estimatedTime}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport TodosContext from \"../../context/todo-context\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst useStyles = makeStyles({\r\n  todoList: {\r\n    padding: \"2rem\",\r\n    marginTop: \"2rem\",\r\n    borderRadius: \"6px\",\r\n    boxShadow: \"0 0 8px 1px RGBA(0,0,0,0.5)\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: \"#f3f3f3\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    \"@media (max-width: 800px)\": {\r\n      width: \"80%\",\r\n      padding: '2rem .5rem'\r\n    },\r\n  },\r\n});\r\n\r\nconst TodoList: React.FC = () => {\r\n  const { todos } = useContext(TodosContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {todos.length > 0 && (\r\n        <ul className={classes.todoList}>\r\n          {todos.map((item, index) => {\r\n            return <TodoItem key={index} todo={item} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport NewTodo from \"./components/NewTodo/NewTodo\";\r\nimport TodoList from \"./components/Todos/TodoList\";\r\nimport { TodosProvider } from \"./context/todo-context\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    backgroundColor: \"#212121\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  \r\n  \r\n    \"@media (max-width: 800px)\": {\r\n      padding: 0\r\n    },\r\n  },\r\n\r\n\r\n  button: {\r\n    backgroundColor: \"#CC0000\",\r\n    color: \"white\",\r\n    \"&:hover\": { backgroundColor: \"#DD0000\" },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TodosProvider>\r\n      <Container maxWidth=\"xl\" className={classes.container}>\r\n        <NewTodo />\r\n        <TodoList />\r\n      </Container>\r\n    </TodosProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}